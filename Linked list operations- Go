 package main

import "fmt"

 type node struct{
 	data int
 	next *node
 }

 type linkedList struct{
 	head *node
 }

 func insert(list *linkedList, data int){
 	node := &node{data : data} 
 	temp := list.head
 	if list.head == nil{
 		list.head = node
 	}else{
 		for temp.next != nil{
 			temp = temp.next
 		}
 		temp.next = node
 	}
	
 }

 func print(list *linkedList){
 	temp := list.head
 	for temp != nil{
 		fmt.Println(temp.data)
 		temp = temp.next
 	}
 }

func remove(list *linkedList,data int){
	temp := list.head
  	prev := list.head
  	if (temp != nil && temp.data == data){
  		list.head = temp.next
  	}else{
  		for temp != nil && temp.data != data{
  			prev = temp;
  			temp = temp.next;
  		}
  		prev.next = temp.next
  	}
  }


//

func main(){
	list := &linkedList{}
	for i := 1;i<=5;i++{
		insert(list,i)
	}
	remove(list,4)
	print(list)
}
